package code;import java.io.*;import java.util.*;public class MiniSearchEngine {    private HashMap invertedIndex;    private String[] documentNames;    public MiniSearchEngine() {        invertedIndex = new HashMap();    }    /** PART 1 : INDEXING     * loads and indexes the docs     * @param documentPaths array of file paths to docs     * @throws IOException if cant read a doc     * Sources: https://nlp.stanford.edu/IR-book/html/htmledition/a-first-take-at-building-an-inverted-index-1.html     * **/    public void indexDocuments(String[] documentPaths) throws IOException {        documentNames = documentPaths;        for (int docId = 0; docId < documentPaths.length; docId++) {            File file = new File(documentPaths[docId]);            BufferedReader reader = new BufferedReader(new FileReader(file));            String line;            while ((line = reader.readLine()) != null) {                // tokenize the line into words                String[] words = tokenize(line);                // add each word to the inverted index                for (String word : words) {                    invertedIndex.addWordOccurrence(word, docId);                }            }            reader.close();        }    }    /**     * tokenizes a line of text into words, converts to lowercase and removes punctuation     * Source : https://stackoverflow.com/questions/21946042/remove-all-spaces-and-punctuation-anything-not-a-letter-from-a-string     */    private String[] tokenize(String line) {        // convert to lowercase and replace punctuation with spaces        line = line.toLowerCase().replaceAll("[^a-z0-9\\s]", " ");        // split by whitespace and filter out empty strings        return Arrays.stream(line.split("\\s+"))                .filter(word -> !word.isEmpty())                .toArray(String[]::new);    }}